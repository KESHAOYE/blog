import{_ as o,c as i,ag as l,o as e}from"./chunks/framework.BxW8Wou5.js";const b=JSON.parse('{"title":"CSS中的盒子模型","description":"","frontmatter":{},"headers":[],"relativePath":"frontend-basic/css/css盒子模型.md","filePath":"frontend-basic/css/css盒子模型.md","lastUpdated":1705937785000}'),t={name:"frontend-basic/css/css盒子模型.md"};function r(p,a,n,s,d,h){return e(),i("div",null,a[0]||(a[0]=[l('<h1 id="css中的盒子模型" tabindex="-1">CSS中的盒子模型 <a class="header-anchor" href="#css中的盒子模型" aria-label="Permalink to &quot;CSS中的盒子模型&quot;">​</a></h1><p><strong>box</strong>：每个元素在页面中都会生成一个矩形区域（盒子）</p><p>盒子类型：</p><ol><li>行盒，display属性等于inline的元素</li><li>块盒，display属性等于block的元素</li></ol><p><strong>行盒在页面中不换行，块盒在页面中会换行</strong></p><p>display的默认值为inline</p><p>浏览器默认样式表设置的块盒： 容器元素(div)、h1~h6、p</p><p>常见的行盒：span、a、img、video、audio</p><h2 id="盒子的组成部分" tabindex="-1">盒子的组成部分 <a class="header-anchor" href="#盒子的组成部分" aria-label="Permalink to &quot;盒子的组成部分&quot;">​</a></h2><p>无论是行盒还是块盒，都由下面几个部分组成，从内到外分别是：</p><ol><li><p>内容 content</p><p>  width、height设置的是盒子内容的宽高</p><p>  内容部分通常叫做整个盒子的<strong>内容盒（content-box）</strong></p></li><li><p>填充 padding</p><p>  盒子边框到盒子内容的距离</p><p>  padding-left、right、top、bottom</p><p>  padding简写属性（上、右、下、左）</p><p>  填充区 + 内容区 = <strong>填充盒（padding-box）</strong></p></li><li><p>边框 border</p><p>  边框 = 边框样式（borde-style） + 边框宽度（border-width） + 边框颜色（border-color）</p><p>  边框区域 + 填充区 + 内容区 = <strong>边框盒（border-box）</strong></p></li><li><p>外边框 margin</p><p>边框到其他盒子的距离</p><p>  margin-left、right、top、bottom</p><p>  margin简写属性（上、右、下、左）</p></li></ol><hr><h1 id="盒模型的应用" tabindex="-1">盒模型的应用 <a class="header-anchor" href="#盒模型的应用" aria-label="Permalink to &quot;盒模型的应用&quot;">​</a></h1><h2 id="改变宽高范围" tabindex="-1">改变宽高范围 <a class="header-anchor" href="#改变宽高范围" aria-label="Permalink to &quot;改变宽高范围&quot;">​</a></h2><p>默认情况下，width和height设置的是内容的宽高</p><p>衡量设计师原型稿时，往往使用的是边框盒，但设置width和height，则设置的是内容盒</p><ol><li>使用精确计算</li><li>CSS3 box-sizing：（content-box - 默认 | border-box）</li></ol><h2 id="改变背景覆盖范围" tabindex="-1">改变背景覆盖范围 <a class="header-anchor" href="#改变背景覆盖范围" aria-label="Permalink to &quot;改变背景覆盖范围&quot;">​</a></h2><p>默认情况下，背景覆盖边框盒</p><p>可以通过 <strong>backgroud-clip（padding-box | content-box | border-box - 默认）</strong> 修改</p><h2 id="溢出处理" tabindex="-1">溢出处理 <a class="header-anchor" href="#溢出处理" aria-label="Permalink to &quot;溢出处理&quot;">​</a></h2><p>定长、定宽盒子内容可能会发生溢出</p><p>overflow（hidden | auto | scroll），控制内容溢出边框盒后的处理方式</p><h2 id="断词规则" tabindex="-1">断词规则 <a class="header-anchor" href="#断词规则" aria-label="Permalink to &quot;断词规则&quot;">​</a></h2><p>word-break，会影响文字在什么地方被截断换行</p><p>normal： 普通，CJK字符（中文、日文、韩文）（文字位置截断），非CJK字符（单词位置截断）</p><p>break-all： 截断所有，所有字符都在文字处截断</p><p>keep-all：所有文字都在单词处截断</p><h2 id="空白处理" tabindex="-1">空白处理 <a class="header-anchor" href="#空白处理" aria-label="Permalink to &quot;空白处理&quot;">​</a></h2><p>white-space：nowrap</p><hr><h1 id="行盒的盒模型" tabindex="-1">行盒的盒模型 <a class="header-anchor" href="#行盒的盒模型" aria-label="Permalink to &quot;行盒的盒模型&quot;">​</a></h1><p>常见的行盒：包含具体内容的元素</p><p>span、storen、em、a、img、video、audio</p><h2 id="显著特点" tabindex="-1">显著特点 <a class="header-anchor" href="#显著特点" aria-label="Permalink to &quot;显著特点&quot;">​</a></h2><ol><li>盒子沿着内容延伸</li><li>行盒不能设置宽高</li></ol><p>调整行盒的宽高，应该使用字体大小、行高、字体类型等间接调整</p><ol start="3"><li>内边距（填充区）</li></ol><p>水平方向有效，垂直方向仅会影响背景，不会实际占据空间</p><ol start="4"><li>边框</li></ol><p>水平方向有效，垂直方向不会实际占据空间</p><ol start="5"><li>外边距</li></ol><p>水平方向有效，垂直方向不会实际占据空间</p><h2 id="行高的取值" tabindex="-1">行高的取值 <a class="header-anchor" href="#行高的取值" aria-label="Permalink to &quot;行高的取值&quot;">​</a></h2><p><strong>line-height（可继承）</strong></p><ol><li><p>px，像素值</p></li><li><p>无单位的数字：行高为字体大小的 n 倍</p><ul><li>先继承</li><li>再计算像素值</li></ul></li><li><p>em单位 ： 行高为字体大小的 n 倍（会出现问题）</p><ul><li>先计算像素值</li><li>再继承</li></ul></li><li><p>百分比</p></li></ol><h2 id="行块盒" tabindex="-1">行块盒 <a class="header-anchor" href="#行块盒" aria-label="Permalink to &quot;行块盒&quot;">​</a></h2><p>display：inline-block的盒子</p><ol><li>不独占一行</li><li>盒模型中所有尺寸都有效</li></ol><h2 id="空白折叠" tabindex="-1">空白折叠 <a class="header-anchor" href="#空白折叠" aria-label="Permalink to &quot;空白折叠&quot;">​</a></h2><p><strong>无论多少个空格、tab、换行都会折叠为一个</strong></p><p>发生在行盒（行块盒）内部或行盒（行块盒）之间</p><h2 id="可替换元素-和-非可替换元素" tabindex="-1">可替换元素 和 非可替换元素 <a class="header-anchor" href="#可替换元素-和-非可替换元素" aria-label="Permalink to &quot;可替换元素 和 非可替换元素&quot;">​</a></h2><p>大部分元素，页面上显示的结果，取决于元素内容，称为<strong>非可替换元素</strong></p><p>少部分元素，页面上显示的结果，取决于元素属性，称为<strong>可替换元素</strong></p><p>可替换元素：img、video、audio</p><p>绝大部分可替换元素为行盒</p><p>可替换元素类似行块盒，盒模型中所有尺寸都有效</p>',58)]))}const u=o(t,[["render",r]]);export{b as __pageData,u as default};
