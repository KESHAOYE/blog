import{_ as l,c as i,ag as e,o as r}from"./chunks/framework.BxW8Wou5.js";const _=JSON.parse('{"title":"7、面向对象分析、设计、测试","description":"","frontmatter":{},"headers":[],"relativePath":"ruankao/软件设计师/第6章 - 面向对象/7.面向对象分析.md","filePath":"ruankao/软件设计师/第6章 - 面向对象/7.面向对象分析.md","lastUpdated":1761796671000}'),t={name:"ruankao/软件设计师/第6章 - 面向对象/7.面向对象分析.md"};function o(n,a,h,d,s,u){return r(),i("div",null,a[0]||(a[0]=[e('<h1 id="_7、面向对象分析、设计、测试" tabindex="-1">7、面向对象分析、设计、测试 <a class="header-anchor" href="#_7、面向对象分析、设计、测试" aria-label="Permalink to &quot;7、面向对象分析、设计、测试&quot;">​</a></h1><h2 id="面向对象分析-ooa" tabindex="-1">面向对象分析（OOA） <a class="header-anchor" href="#面向对象分析-ooa" aria-label="Permalink to &quot;面向对象分析（OOA）&quot;">​</a></h2><h3 id="目的" tabindex="-1">目的 <a class="header-anchor" href="#目的" aria-label="Permalink to &quot;目的&quot;">​</a></h3><ul><li>获得对应用问题的理解 <strong>（理解问题）</strong></li><li>理解的目的是确定系统的功能、性能要求</li><li>不需要考虑测试问题</li></ul><h3 id="活动-背" tabindex="-1">活动（背） <a class="header-anchor" href="#活动-背" aria-label="Permalink to &quot;活动（背）&quot;">​</a></h3><ul><li>认定对象：定义问题域，根据“名词”分析对象</li><li>组织对象</li><li>对象间的相互作用</li><li>确定对象的操作（基于对象的操作）</li><li>定义对象的内部信息</li></ul><h2 id="面向对象设计-ood" tabindex="-1">面向对象设计（OOD） <a class="header-anchor" href="#面向对象设计-ood" aria-label="Permalink to &quot;面向对象设计（OOD）&quot;">​</a></h2><p>基于面向对象分析的结果进行的</p><h3 id="目标" tabindex="-1">目标 <a class="header-anchor" href="#目标" aria-label="Permalink to &quot;目标&quot;">​</a></h3><ul><li>定义系统的构造蓝图（模型等）</li><li><strong>理解解决方案</strong></li><li>实现系统细节</li></ul><h3 id="活动-背-1" tabindex="-1">活动（背） <a class="header-anchor" href="#活动-背-1" aria-label="Permalink to &quot;活动（背）&quot;">​</a></h3><ul><li>识别类及对象</li><li>定义属性</li><li>定义服务（操作）</li><li>识别关系</li><li>识别包</li></ul><h2 id="面向对象测试" tabindex="-1">面向对象测试 <a class="header-anchor" href="#面向对象测试" aria-label="Permalink to &quot;面向对象测试&quot;">​</a></h2><h3 id="四个层次-背" tabindex="-1">四个层次（背） <a class="header-anchor" href="#四个层次-背" aria-label="Permalink to &quot;四个层次（背）&quot;">​</a></h3><ul><li>算法层</li><li>类层</li><li>模板层</li><li>系统层</li></ul>',15)]))}const b=l(t,[["render",o]]);export{_ as __pageData,b as default};
