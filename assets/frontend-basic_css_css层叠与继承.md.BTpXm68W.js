import{_ as a,c as i,ag as n,o as l}from"./chunks/framework.BxW8Wou5.js";const o=JSON.parse('{"title":"CSS层叠","description":"","frontmatter":{},"headers":[],"relativePath":"frontend-basic/css/css层叠与继承.md","filePath":"frontend-basic/css/css层叠与继承.md","lastUpdated":1705937785000}'),p={name:"frontend-basic/css/css层叠与继承.md"};function e(t,s,h,k,r,d){return l(),i("div",null,s[0]||(s[0]=[n(`<h1 id="css层叠" tabindex="-1">CSS层叠 <a class="header-anchor" href="#css层叠" aria-label="Permalink to &quot;CSS层叠&quot;">​</a></h1><p>声明冲突：同一个样式，多次应用到同一个元素</p><p>层叠：解决声明冲突，浏览器自动处理（权重计算）</p><h2 id="_1-比较重要性" tabindex="-1">1.比较重要性 <a class="header-anchor" href="#_1-比较重要性" aria-label="Permalink to &quot;1.比较重要性&quot;">​</a></h2><p>重要性从高到低：</p><p>1）作者样式表中的important</p><p>2）作者样式表中的普通样式</p><p>3）浏览器默认样式表中的样式</p><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/**例如修改a元素,则颜色为红色 */</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">a</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  color</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">red</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> !important</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">a</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">   color</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">green</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h2 id="_2-比较特殊性" tabindex="-1">2.比较特殊性 <a class="header-anchor" href="#_2-比较特殊性" aria-label="Permalink to &quot;2.比较特殊性&quot;">​</a></h2><p>总体规则：看选择器（选择器选中的范围越窄越特殊）</p><p>具体规则：通过选择器，计算出一个四位数 (XXXX),谁大谁生效</p><ol><li>千位:如果是内联样式，计1，否则计0</li><li>百位:选择器中所有ID选择器的数量</li><li>十位:选择器中所有类选择器、属性选择器、伪类选择器的数量</li><li>个位:选择器中所有元素选择器、伪元素选择器数量</li></ol><p><strong>非逢10进一，逢256进1，所以可能出现 0 12 1 0的情况，这种情况只需对比对应位置的大小即可。</strong></p><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/** 0110 */</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">#app</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> .selected</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  color</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">red</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/** 0110 */</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">#app</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> .selected:hover</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  color</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">green</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/** 0101 */</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">#app</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> .selected::after</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  content</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;example&#39;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h2 id="_3-比较源次序" tabindex="-1">3.比较源次序 <a class="header-anchor" href="#_3-比较源次序" aria-label="Permalink to &quot;3.比较源次序&quot;">​</a></h2><p>代码书写靠后的胜出</p><h2 id="应用" tabindex="-1">应用 <a class="header-anchor" href="#应用" aria-label="Permalink to &quot;应用&quot;">​</a></h2><ol><li><p>重置样式表</p><p>书写一些作者样式，覆盖浏览器的默认样式</p><p>重置样式表 -&gt; 浏览器的默认样式</p><p>常见的重置样式表：normalize.css、reset.css、meyer.css</p></li></ol><h1 id="css继承" tabindex="-1">CSS继承 <a class="header-anchor" href="#css继承" aria-label="Permalink to &quot;CSS继承&quot;">​</a></h1><p>子元素会继承父元素的某些CSS属性</p><p>通常，跟文字内容相关的属性都能被继承</p>`,22)]))}const E=a(p,[["render",e]]);export{o as __pageData,E as default};
