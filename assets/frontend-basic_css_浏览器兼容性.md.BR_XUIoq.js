import{_ as a,c as i,ag as l,o as t}from"./chunks/framework.BxW8Wou5.js";const k=JSON.parse('{"title":"浏览器兼容性","description":"","frontmatter":{},"headers":[],"relativePath":"frontend-basic/css/浏览器兼容性.md","filePath":"frontend-basic/css/浏览器兼容性.md","lastUpdated":1705937785000}'),e={name:"frontend-basic/css/浏览器兼容性.md"};function n(p,s,h,o,c,r){return t(),i("div",null,s[0]||(s[0]=[l(`<h1 id="浏览器兼容性" tabindex="-1">浏览器兼容性 <a class="header-anchor" href="#浏览器兼容性" aria-label="Permalink to &quot;浏览器兼容性&quot;">​</a></h1><h2 id="问题产生的原因" tabindex="-1">问题产生的原因 <a class="header-anchor" href="#问题产生的原因" aria-label="Permalink to &quot;问题产生的原因&quot;">​</a></h2><ul><li>市场竞争</li><li>标准版本的变化</li></ul><h2 id="厂商前缀" tabindex="-1">厂商前缀 <a class="header-anchor" href="#厂商前缀" aria-label="Permalink to &quot;厂商前缀&quot;">​</a></h2><blockquote><p>比如：box-sizing，谷歌旧浏览器中使用-webkit-box-sizing： border-box</p></blockquote><h3 id="原因" tabindex="-1">原因 <a class="header-anchor" href="#原因" aria-label="Permalink to &quot;原因&quot;">​</a></h3><ul><li>市场竞争，标准没有发布</li><li>标准还在讨论中（草案），浏览器厂商希望先支持</li></ul><p>IE：-ms-</p><p>Chrome， safari： -webkit-</p><p>opera： -o-</p><p>firefox： -moz-</p><blockquote><p>浏览器在处理样式或元素时，使用如下方式： 当遇到无法识别的代码时，直接略过</p></blockquote><ol><li><p>谷歌浏览器滚动条</p><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">webkit-scrollbar</span></span></code></pre></div><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/**设置滑块样式 */</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ::</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">webkit-scrollbar-thumb</span></span></code></pre></div><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/**设置滚动条样式 */</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ::</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">webkit-scrollbar-track</span></span></code></pre></div><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/**设置滚动条上下按钮样式 */</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">webkit-scrollbar-button</span></span></code></pre></div></li></ol><p><strong>实际上，在开发中使用自定义滚动条，用div+js实现</strong></p><ol start="2"><li>背景图多选一</li></ol><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">-webkit-image-set()</span></span></code></pre></div><h2 id="css-hack" tabindex="-1">css hack <a class="header-anchor" href="#css-hack" aria-label="Permalink to &quot;css hack&quot;">​</a></h2><p>根据不同浏览器（主要针对IE），设置不同的样式和元素</p><ol><li>样式</li></ol><p>IE中，CSS的特殊前缀</p><ul><li>*属性（例如：*background），兼容IE5、6、7</li><li>_属性（例如：_background），兼容IE5、6</li><li>属性\\9（例如：background: red\\9），兼容IE5-10</li><li>属性\\0（例如：background: red\\0），兼容IE8-10</li><li>属性\\9\\0（例如：background: red\\9\\0），兼容IE9-11</li></ul><blockquote><p>IE5、6、7的外边距BUG，浮动元素的外边距会翻倍</p></blockquote><ol start="2"><li>条件判断</li></ol><div class="language-html vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">&lt;!--[if IE]&gt;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> &lt;p&gt;这是IE浏览器&lt;/p&gt;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">&lt;![endIf]--&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">&lt;!--[if !IE]&gt;&lt;--&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">p</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;这不是IE浏览器&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">p</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">&lt;!--&lt;![endIf]--&gt;</span></span></code></pre></div><h2 id="渐进增强-和-优雅降级" tabindex="-1">渐进增强 和 优雅降级 <a class="header-anchor" href="#渐进增强-和-优雅降级" aria-label="Permalink to &quot;渐进增强 和 优雅降级&quot;">​</a></h2><p>两种解决兼容性问题的思路，会影响代码的书写风格</p><ul><li>渐进增强：相适应大部分浏览器，然后正对新版本浏览器加入新的样式</li></ul><p>书写代码时，先尽量避免书写有兼容性问题的代码，完成之后，再逐步加入新标准中的代码</p><ul><li>优雅降级：先制作完整的功能，然后正对低版本浏览器进行特殊处理</li></ul><p>书写代码时候，先不用特别在意兼容性，完成整个功能后，再针对比版本浏览器处理样式</p><h2 id="caniuse" tabindex="-1">caniuse <a class="header-anchor" href="#caniuse" aria-label="Permalink to &quot;caniuse&quot;">​</a></h2><p><a href="https://caniuse.com" target="_blank" rel="noreferrer">查找CSS兼容性</a></p>`,32)]))}const g=a(e,[["render",n]]);export{k as __pageData,g as default};
