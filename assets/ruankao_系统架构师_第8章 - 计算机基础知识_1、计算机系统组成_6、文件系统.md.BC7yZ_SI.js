import{_ as e,c as l,ag as i,o as t}from"./chunks/framework.BxW8Wou5.js";const r="/blog/picture/%E8%BD%AF%E8%80%83/%E4%BD%8D%E7%A4%BA%E5%9B%BE.png",u=JSON.parse('{"title":"6、文件系统","description":"","frontmatter":{},"headers":[],"relativePath":"ruankao/系统架构师/第8章 - 计算机基础知识/1、计算机系统组成/6、文件系统.md","filePath":"ruankao/系统架构师/第8章 - 计算机基础知识/1、计算机系统组成/6、文件系统.md","lastUpdated":1748002092000}'),o={name:"ruankao/系统架构师/第8章 - 计算机基础知识/1、计算机系统组成/6、文件系统.md"};function n(h,a,s,d,_,c){return t(),l("div",null,a[0]||(a[0]=[i('<h1 id="_6、文件系统" tabindex="-1">6、文件系统 <a class="header-anchor" href="#_6、文件系统" aria-label="Permalink to &quot;6、文件系统&quot;">​</a></h1><h2 id="索引文件结构" tabindex="-1">索引文件结构 <a class="header-anchor" href="#索引文件结构" aria-label="Permalink to &quot;索引文件结构&quot;">​</a></h2><p>索引文件结构是一种组织和存储文件数据的方式，旨在提高数据检索的效率。它通过创建一个包含指向实际数据块的指针的额外结构（即索引）来实现这一点</p><h3 id="索引结点" tabindex="-1">索引结点 <a class="header-anchor" href="#索引结点" aria-label="Permalink to &quot;索引结点&quot;">​</a></h3><p>UNIX 系统有 13 个系统节点（题目没给默认 13 个）</p><h3 id="物理盘块" tabindex="-1">物理盘块 <a class="header-anchor" href="#物理盘块" aria-label="Permalink to &quot;物理盘块&quot;">​</a></h3><ul><li>存放索引：索引盘块</li><li>存放文件数据：数据盘块</li></ul><p>0-9 号存放直接索引文件</p><h2 id="位示图" tabindex="-1">位示图 <a class="header-anchor" href="#位示图" aria-label="Permalink to &quot;位示图&quot;">​</a></h2><ul><li>空闲区表法（空闲文件目录）</li><li>空闲链表法</li><li>位示图法</li><li>成组链接法</li></ul><img src="'+r+'"><p>类似电影 app 选座</p><h3 id="例题" tabindex="-1">例题 <a class="header-anchor" href="#例题" aria-label="Permalink to &quot;例题&quot;">​</a></h3><p>某字长为 32 位的计算机的文件管理系统采用位示图(bitmap)记录磁盘的使用情况。若磁盘的容量为 300GB，物理块的大小为 1MB，那么位示图的大小为()个字。</p><p>A、1200 B、3200 C、6400 D、9600</p><h4 id="解析" tabindex="-1">解析 <a class="header-anchor" href="#解析" aria-label="Permalink to &quot;解析&quot;">​</a></h4><ul><li>磁盘容量有 300GB</li><li>物理块大小为 1mb,所以共有 300GB / 1MB = 300 _ 1024 = 300 * 2（10）个</li><li>一个比特位记录一个物理块，题目定义每 32 个比特位为一组</li><li>所以 300*2（10） / （300 * 2（10） / 32） = 9600</li></ul>',17)]))}const m=e(o,[["render",n]]);export{u as __pageData,m as default};
