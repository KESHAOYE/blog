import{_ as e,c as t,ag as r,o as l}from"./chunks/framework.BxW8Wou5.js";const i="/blog/picture/%E8%BD%AF%E8%80%83/%E7%BB%93%E6%9E%84%E5%8C%96%E8%AE%BE%E8%AE%A1-%E5%86%85%E8%81%9A.png",o="/blog/picture/%E8%BD%AF%E8%80%83/%E7%BB%93%E6%9E%84%E5%8C%96%E8%AE%BE%E8%AE%A1-%E8%80%A6%E5%90%88.png",p=JSON.parse('{"title":"4、结构化设计","description":"","frontmatter":{},"headers":[],"relativePath":"ruankao/系统架构师/第3章 - 软件工程/4.结构化设计.md","filePath":"ruankao/系统架构师/第3章 - 软件工程/4.结构化设计.md","lastUpdated":null}'),n={name:"ruankao/系统架构师/第3章 - 软件工程/4.结构化设计.md"};function s(h,a,d,_,c,u){return l(),t("div",null,a[0]||(a[0]=[r('<h1 id="_4、结构化设计" tabindex="-1">4、结构化设计 <a class="header-anchor" href="#_4、结构化设计" aria-label="Permalink to &quot;4、结构化设计&quot;">​</a></h1><h2 id="概要设计【外部设计】" tabindex="-1">概要设计【外部设计】 <a class="header-anchor" href="#概要设计【外部设计】" aria-label="Permalink to &quot;概要设计【外部设计】&quot;">​</a></h2><p>功能需求分配给软件模块，确定每个模块的功能和<strong>调用关系</strong>，形成<strong>模块结构图</strong></p><h2 id="详细设计【内部设计】" tabindex="-1">详细设计【内部设计】 <a class="header-anchor" href="#详细设计【内部设计】" aria-label="Permalink to &quot;详细设计【内部设计】&quot;">​</a></h2><p>为每个<strong>具体任务</strong>选择适当的技术手段和<strong>处理方法</strong></p><h2 id="结构化设计原则" tabindex="-1">结构化设计原则 <a class="header-anchor" href="#结构化设计原则" aria-label="Permalink to &quot;结构化设计原则&quot;">​</a></h2><ul><li>模块独立性原则</li><li>保持模块的大小适中</li><li>多扇入，少扇出</li><li>深度和宽度均不宜过高</li></ul><h2 id="内聚" tabindex="-1">内聚 <a class="header-anchor" href="#内聚" aria-label="Permalink to &quot;内聚&quot;">​</a></h2><p>一个模块内的内容都是相关的</p><img src="'+i+'"><ul><li>过程内聚与顺序内聚相比没有要求必须顺序执行</li></ul><h2 id="耦合" tabindex="-1">耦合 <a class="header-anchor" href="#耦合" aria-label="Permalink to &quot;耦合&quot;">​</a></h2><p>是模块与模块之间的关联</p><img src="'+o+'"><h2 id="模块的四要素" tabindex="-1">模块的四要素 <a class="header-anchor" href="#模块的四要素" aria-label="Permalink to &quot;模块的四要素&quot;">​</a></h2><ul><li>输入和输出：模块的输入来源和输出去向都是同一个调用者，即一个模块，从调用者那儿取得输入，进行加工后再把输出返回调用者</li><li>处理功能：指模块吧输出转换成输出所做的工作</li><li>内部数据：指仅供该模块本身引用的数据</li><li>程序代码：指用来实现模块功能的程序</li></ul>',16)]))}const m=e(n,[["render",s]]);export{p as __pageData,m as default};
