import{_ as l,c as e,ag as i,o as t}from"./chunks/framework.BxW8Wou5.js";const c=JSON.parse('{"title":"11. 数据湖","description":"","frontmatter":{},"headers":[],"relativePath":"ruankao/系统架构师/第2章 - 系统工程和信息系统基础/11. 数据湖.md","filePath":"ruankao/系统架构师/第2章 - 系统工程和信息系统基础/11. 数据湖.md","lastUpdated":1746770091000}'),r={name:"ruankao/系统架构师/第2章 - 系统工程和信息系统基础/11. 数据湖.md"};function o(n,a,h,d,s,u){return t(),e("div",null,a[0]||(a[0]=[i('<h1 id="_11-数据湖" tabindex="-1">11. 数据湖 <a class="header-anchor" href="#_11-数据湖" aria-label="Permalink to &quot;11. 数据湖&quot;">​</a></h1><h2 id="概念" tabindex="-1">概念 <a class="header-anchor" href="#概念" aria-label="Permalink to &quot;概念&quot;">​</a></h2><p>数据湖是一个存储企业各种各样原始数据的大型仓库，其中数据可供存取、处理、分析和传输</p><h2 id="区别" tabindex="-1">区别 <a class="header-anchor" href="#区别" aria-label="Permalink to &quot;区别&quot;">​</a></h2><h3 id="数据维度" tabindex="-1">数据维度 <a class="header-anchor" href="#数据维度" aria-label="Permalink to &quot;数据维度&quot;">​</a></h3><ul><li>数据仓库是通过抽取清洗过、结构化过的数据</li><li>数据湖是原始数据，存放结构化、半结构化数据</li></ul><h3 id="模式维度" tabindex="-1">模式维度 <a class="header-anchor" href="#模式维度" aria-label="Permalink to &quot;模式维度&quot;">​</a></h3><ul><li>数据仓库在数据存储之前定义数据模式</li><li>数据仓库在数据集成之前完成大量工作</li><li>数据仓库的数据价值提前明确</li><li>数据湖的在数据存储之后定义数据模式</li><li>数据湖提供简单、敏捷的数据集成</li><li>数据湖的数据价值尚未明确</li></ul><h3 id="存取方法维度" tabindex="-1">存取方法维度 <a class="header-anchor" href="#存取方法维度" aria-label="Permalink to &quot;存取方法维度&quot;">​</a></h3><ul><li>数据仓库提供标准 SQL 接口</li><li>数据湖为应用程序，类 SQL 接口</li></ul><h3 id="优势" tabindex="-1">优势 <a class="header-anchor" href="#优势" aria-label="Permalink to &quot;优势&quot;">​</a></h3><ul><li><p>数据仓库多数据源集成；干净、安全的数据、转换一次多次使用</p></li><li><p>数据湖有无限扩展性，可以并行执行，支持编程框架、数据经济</p></li><li><p>数据仓库只支持数据分析处理</p></li><li><p>数据湖既支持数据分析处理，也支持事务（业务）处理。</p></li></ul>',12)]))}const p=l(r,[["render",o]]);export{c as __pageData,p as default};
