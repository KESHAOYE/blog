import{_ as e,c as r,ag as t,o}from"./chunks/framework.BxW8Wou5.js";const _=JSON.parse('{"title":"3、关系代数","description":"","frontmatter":{},"headers":[],"relativePath":"ruankao/系统架构师/第11章 - 数据库系统/3、关系代数.md","filePath":"ruankao/系统架构师/第11章 - 数据库系统/3、关系代数.md","lastUpdated":1748002092000}'),l={name:"ruankao/系统架构师/第11章 - 数据库系统/3、关系代数.md"};function i(h,a,n,d,s,c){return o(),r("div",null,a[0]||(a[0]=[t('<h1 id="_3、关系代数" tabindex="-1">3、关系代数 <a class="header-anchor" href="#_3、关系代数" aria-label="Permalink to &quot;3、关系代数&quot;">​</a></h1><p>针对关系模式进行的自然运算</p><h2 id="并" tabindex="-1">并 <a class="header-anchor" href="#并" aria-label="Permalink to &quot;并&quot;">​</a></h2><p>要求两张表属性相同，将两张表里的元组合并</p><h2 id="交" tabindex="-1">交 <a class="header-anchor" href="#交" aria-label="Permalink to &quot;交&quot;">​</a></h2><p>要求两张表属性相同，将两张表里的相同部分进行合并</p><h2 id="差" tabindex="-1">差 <a class="header-anchor" href="#差" aria-label="Permalink to &quot;差&quot;">​</a></h2><p>要求两张表属性相同，两张表相同元素去除后留下主表元素，例如 S2 - S1，留下 S2 中主表元素</p><h2 id="笛卡尔积-x" tabindex="-1">笛卡尔积（x） <a class="header-anchor" href="#笛卡尔积-x" aria-label="Permalink to &quot;笛卡尔积（x）&quot;">​</a></h2><p>属性列是二者之和，有名称相同则标明（表名.属性） 元组行是二者乘积，S1 的记录看为整体与 S2 每条记录分别拼接 看见 1=4，代表列号，‘1’=‘4’代表列内容</p><h2 id="投影-π" tabindex="-1">投影（Π） <a class="header-anchor" href="#投影-π" aria-label="Permalink to &quot;投影（Π）&quot;">​</a></h2><p>只需要一个表格，垂直选择，就是选择对应的属性列</p><h2 id="选择" tabindex="-1">选择（） <a class="header-anchor" href="#选择" aria-label="Permalink to &quot;选择（）&quot;">​</a></h2><p>只需要一个表格，水平选择，即选择符合条件的行</p><h2 id="连接" tabindex="-1">连接 <a class="header-anchor" href="#连接" aria-label="Permalink to &quot;连接&quot;">​</a></h2><h3 id="自然连接" tabindex="-1">自然连接 <a class="header-anchor" href="#自然连接" aria-label="Permalink to &quot;自然连接&quot;">​</a></h3><p>是一种特殊的连接，符号为 ⋈ 逻辑是两者属性列之和去重复，相同属性列取相等</p><h2 id="性能" tabindex="-1">性能 <a class="header-anchor" href="#性能" aria-label="Permalink to &quot;性能&quot;">​</a></h2><ul><li>自然连接 &gt; 笛卡尔积</li><li>压缩</li></ul>',19)]))}const p=e(l,[["render",i]]);export{_ as __pageData,p as default};
