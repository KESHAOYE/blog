import{_ as e,c as l,ag as t,o as i}from"./chunks/framework.BxW8Wou5.js";const c=JSON.parse('{"title":"3、函数","description":"","frontmatter":{},"headers":[],"relativePath":"ruankao/软件设计师/第2章 - 程序设计语言/3.函数.md","filePath":"ruankao/软件设计师/第2章 - 程序设计语言/3.函数.md","lastUpdated":1760600418000}'),r={name:"ruankao/软件设计师/第2章 - 程序设计语言/3.函数.md"};function o(n,a,s,d,h,_){return i(),l("div",null,a[0]||(a[0]=[t('<h1 id="_3、函数" tabindex="-1">3、函数 <a class="header-anchor" href="#_3、函数" aria-label="Permalink to &quot;3、函数&quot;">​</a></h1><h2 id="参数" tabindex="-1">参数 <a class="header-anchor" href="#参数" aria-label="Permalink to &quot;参数&quot;">​</a></h2><ul><li>形参：定义函数时声明的参数</li><li>实参：调用函数时实际传递的参数</li></ul><h2 id="函数调用" tabindex="-1">函数调用 <a class="header-anchor" href="#函数调用" aria-label="Permalink to &quot;函数调用&quot;">​</a></h2><h3 id="值调用" tabindex="-1">值调用 <a class="header-anchor" href="#值调用" aria-label="Permalink to &quot;值调用&quot;">​</a></h3><p>函数调用时，实参的值会<strong>复制</strong>给形参，形参的值改变不会改变实参的值</p><ul><li>相当于在函数中，定义了一个值，将实参的值复制给它</li><li>实参可以是变量、常量和表达式</li><li>不可以实现形参和实参间双向传递数据的效果</li><li>修改形参的值不会改变实参的值</li></ul><h3 id="引用调用" tabindex="-1">引用调用 <a class="header-anchor" href="#引用调用" aria-label="Permalink to &quot;引用调用&quot;">​</a></h3><p>C++中要加&amp;符号</p><ul><li>修改形参的值会改变实参的值</li><li>实参必须有地址，不能是常量、表达式</li><li>-可以实现形参和实参间双向传递数据的效果</li></ul>',10)]))}const p=e(r,[["render",o]]);export{c as __pageData,p as default};
