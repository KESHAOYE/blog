import{_ as e,c as r,ag as t,o as h}from"./chunks/framework.BxW8Wou5.js";const b=JSON.parse('{"title":"9、存储器","description":"","frontmatter":{},"headers":[],"relativePath":"ruankao/软件设计师/第1章 - 计算机系统/9.存储器.md","filePath":"ruankao/软件设计师/第1章 - 计算机系统/9.存储器.md","lastUpdated":1760412047000}'),o={name:"ruankao/软件设计师/第1章 - 计算机系统/9.存储器.md"};function l(i,a,n,d,s,c){return h(),r("div",null,a[0]||(a[0]=[t('<h1 id="_9、存储器" tabindex="-1">9、存储器 <a class="header-anchor" href="#_9、存储器" aria-label="Permalink to &quot;9、存储器&quot;">​</a></h1><h2 id="存储系统层次结构" tabindex="-1">存储系统层次结构 <a class="header-anchor" href="#存储系统层次结构" aria-label="Permalink to &quot;存储系统层次结构&quot;">​</a></h2><ul><li>CPU 内部通用寄存器</li><li>Cache（SRAM-静态随机存储器）</li><li>主存储器（DRAM-动态随机存储器-周期性刷新）</li><li>联机磁盘存储器</li><li>脱机光盘、磁盘存储器</li></ul><h2 id="按位置分类" tabindex="-1">按位置分类 <a class="header-anchor" href="#按位置分类" aria-label="Permalink to &quot;按位置分类&quot;">​</a></h2><h3 id="内存-主存" tabindex="-1">内存（主存） <a class="header-anchor" href="#内存-主存" aria-label="Permalink to &quot;内存（主存）&quot;">​</a></h3><p>设在主机内或主机板上，用来存放机器当前运行所需要的程序和数据，以便向 CPU 提供信息，相对于外存，特点是容量小、速度快。</p><h3 id="外存-辅存" tabindex="-1">外存（辅存） <a class="header-anchor" href="#外存-辅存" aria-label="Permalink to &quot;外存（辅存）&quot;">​</a></h3><p>磁盘、光盘等，用来存放当前不参加运行的大量信息，而在需要时调入内存</p><h2 id="按材料分类" tabindex="-1">按材料分类 <a class="header-anchor" href="#按材料分类" aria-label="Permalink to &quot;按材料分类&quot;">​</a></h2><h3 id="磁存储器" tabindex="-1">磁存储器 <a class="header-anchor" href="#磁存储器" aria-label="Permalink to &quot;磁存储器&quot;">​</a></h3><p>用磁性介质做成的，如磁芯、磁盘、磁带等。</p><h3 id="半导体存储器" tabindex="-1">半导体存储器 <a class="header-anchor" href="#半导体存储器" aria-label="Permalink to &quot;半导体存储器&quot;">​</a></h3><p>根据所用元件分为双极型和 MOS 型 根据数据是佛需要刷新分为静态和动态</p><h3 id="光存储器" tabindex="-1">光存储器 <a class="header-anchor" href="#光存储器" aria-label="Permalink to &quot;光存储器&quot;">​</a></h3><p>利用光学方法读/写的存储器，如光盘</p><h2 id="按工作方式分类" tabindex="-1">按工作方式分类 <a class="header-anchor" href="#按工作方式分类" aria-label="Permalink to &quot;按工作方式分类&quot;">​</a></h2><h3 id="读-写存储器-ram" tabindex="-1">读/写存储器（RAM） <a class="header-anchor" href="#读-写存储器-ram" aria-label="Permalink to &quot;读/写存储器（RAM）&quot;">​</a></h3><p>可以读也可以写</p><h3 id="只读存储器-rom" tabindex="-1">只读存储器（ROM） <a class="header-anchor" href="#只读存储器-rom" aria-label="Permalink to &quot;只读存储器（ROM）&quot;">​</a></h3><p>只能读不能写</p><h2 id="按访问方式" tabindex="-1">按访问方式 <a class="header-anchor" href="#按访问方式" aria-label="Permalink to &quot;按访问方式&quot;">​</a></h2><h3 id="按内容访问" tabindex="-1">按内容访问 <a class="header-anchor" href="#按内容访问" aria-label="Permalink to &quot;按内容访问&quot;">​</a></h3><p>相联存储器是按内容访问的</p><h3 id="按地址访问" tabindex="-1">按地址访问 <a class="header-anchor" href="#按地址访问" aria-label="Permalink to &quot;按地址访问&quot;">​</a></h3><h2 id="按寻址方式" tabindex="-1">按寻址方式 <a class="header-anchor" href="#按寻址方式" aria-label="Permalink to &quot;按寻址方式&quot;">​</a></h2><h3 id="随机存储器" tabindex="-1">随机存储器 <a class="header-anchor" href="#随机存储器" aria-label="Permalink to &quot;随机存储器&quot;">​</a></h3><p>可以对任何存储单元存入/读取数据，访问任何一个单元所需的时间是相同的</p><h3 id="顺序存储器" tabindex="-1">顺序存储器 <a class="header-anchor" href="#顺序存储器" aria-label="Permalink to &quot;顺序存储器&quot;">​</a></h3><p>访问数据所需的时间与数据所在的存储位置相关，磁带是典型的</p><h3 id="直接存储器" tabindex="-1">直接存储器 <a class="header-anchor" href="#直接存储器" aria-label="Permalink to &quot;直接存储器&quot;">​</a></h3><p>介于随机和顺序存取之间的一种方式。</p><h2 id="虚拟存储器" tabindex="-1">虚拟存储器 <a class="header-anchor" href="#虚拟存储器" aria-label="Permalink to &quot;虚拟存储器&quot;">​</a></h2><p>由主存 + 辅存构成</p>',33)]))}const q=e(o,[["render",l]]);export{b as __pageData,q as default};
