import{_ as r,c as t,ag as a,o as i}from"./chunks/framework.BxW8Wou5.js";const _=JSON.parse('{"title":"属性描述符-definedProperty","description":"","frontmatter":{},"headers":[],"relativePath":"frontend-basic/javascript/属性描述符(defineProperty).md","filePath":"frontend-basic/javascript/属性描述符(defineProperty).md","lastUpdated":1705937785000}'),o={name:"frontend-basic/javascript/属性描述符(defineProperty).md"};function l(p,e,n,d,s,c){return i(),t("div",null,e[0]||(e[0]=[a('<h1 id="属性描述符-definedproperty" tabindex="-1">属性描述符-definedProperty <a class="header-anchor" href="#属性描述符-definedproperty" aria-label="Permalink to &quot;属性描述符-definedProperty&quot;">​</a></h1><h2 id="如何获取属性描述符" tabindex="-1">如何获取属性描述符 <a class="header-anchor" href="#如何获取属性描述符" aria-label="Permalink to &quot;如何获取属性描述符&quot;">​</a></h2><p>🚫 使用<code>for-in</code>循环</p><p>🚫 使用Object.keys</p><p>✅ 使用Object.getOwnPropertyDescriptor</p><h2 id="如何设置属性描述符" tabindex="-1">如何设置属性描述符 <a class="header-anchor" href="#如何设置属性描述符" aria-label="Permalink to &quot;如何设置属性描述符&quot;">​</a></h2><p>使用 Object.defineProperty(obj, prop, descriptor)</p><ul><li><p>obj:要设置的对象</p></li><li><p>prop：要设置的字段</p></li><li><p>descriptor：要定义或修改的属性描述符</p><ul><li>configurable：是否可被配置</li><li>enumberable：是否可被遍历</li><li>value：属性的值</li><li>writable：是否可重写</li></ul><p>访问器</p><ul><li>get(): 读取器,劫持get</li><li>set()：设置器,劫持set</li></ul></li></ul><h2 id="扩展" tabindex="-1">扩展 <a class="header-anchor" href="#扩展" aria-label="Permalink to &quot;扩展&quot;">​</a></h2><ul><li><p>Object.freeze(obj)</p><p>不能添加新的属性，不能移除现有的属性，不能更改它们的可枚举性、可配置性、可写性或值，对象的原型也不能被重新指定</p></li><li><p>Object.seal()</p><p>不能添加新属性、不能删除现有属性或更改其可枚举性和可配置性、不能重新分配其原型。<strong>只要现有属性的值是可写的，它们仍然可以更改</strong></p></li></ul>',10)]))}const u=r(o,[["render",l]]);export{_ as __pageData,u as default};
