import{_ as l,c as i,ag as e,o as t}from"./chunks/framework.BxW8Wou5.js";const u=JSON.parse('{"title":"5、寻址","description":"","frontmatter":{},"headers":[],"relativePath":"ruankao/软件设计师/第1章 - 计算机系统/5.寻址.md","filePath":"ruankao/软件设计师/第1章 - 计算机系统/5.寻址.md","lastUpdated":1760412047000}'),r={name:"ruankao/软件设计师/第1章 - 计算机系统/5.寻址.md"};function o(n,a,_,s,d,c){return t(),i("div",null,a[0]||(a[0]=[e('<h1 id="_5、寻址" tabindex="-1">5、寻址 <a class="header-anchor" href="#_5、寻址" aria-label="Permalink to &quot;5、寻址&quot;">​</a></h1><p><strong>采用不同寻址方式的目的是：扩大寻址空间并提高编程灵活性</strong></p><ul><li>立即寻址：操作数包含在指令中</li><li>直接寻址：操作数存放在内存单元中，指令中直接给出操作数所在的存储单元的地址</li><li>寄存器寻址：操作数存放在一个寄存器中，指令中给出寄存器名</li><li>寄存器间接寻址：操作数存放在内存单元中，操作数所在存储单元的地址在某个寄存器中</li><li>间接寻址：指令中给出操作数地址的地址</li><li>相对寻址：指令地址码给出的是一个偏移量，操作数地址等于本条指令的地址加上该偏移量</li><li>变址寻址：操作数地址等于变址寄存器的内容加偏移量</li></ul><h2 id="速度" tabindex="-1">速度 <a class="header-anchor" href="#速度" aria-label="Permalink to &quot;速度&quot;">​</a></h2><ol><li>立即寻址</li><li>寄存器寻址</li><li>直接寻址</li><li>寄存器间接寻址</li><li>间接</li></ol>',5)]))}const h=l(r,[["render",o]]);export{u as __pageData,h as default};
