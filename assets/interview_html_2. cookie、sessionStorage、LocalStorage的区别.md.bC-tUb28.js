import{_ as e,c as o,ag as t,o as r}from"./chunks/framework.BxW8Wou5.js";const g=JSON.parse('{"title":"2. cookie、sessionStorage、localStorage的区别","description":"","frontmatter":{},"headers":[],"relativePath":"interview/html/2. cookie、sessionStorage、LocalStorage的区别.md","filePath":"interview/html/2. cookie、sessionStorage、LocalStorage的区别.md","lastUpdated":1705937785000}'),s={name:"interview/html/2. cookie、sessionStorage、LocalStorage的区别.md"};function i(l,a,c,n,h,d){return r(),o("div",null,a[0]||(a[0]=[t('<h1 id="_2-cookie、sessionstorage、localstorage的区别" tabindex="-1">2. cookie、sessionStorage、localStorage的区别 <a class="header-anchor" href="#_2-cookie、sessionstorage、localstorage的区别" aria-label="Permalink to &quot;2. cookie、sessionStorage、localStorage的区别&quot;">​</a></h1><p>三者都是用来在客户端存储数据的方式</p><h2 id="不同点" tabindex="-1">不同点 <a class="header-anchor" href="#不同点" aria-label="Permalink to &quot;不同点&quot;">​</a></h2><h3 id="内容" tabindex="-1">内容 <a class="header-anchor" href="#内容" aria-label="Permalink to &quot;内容&quot;">​</a></h3><p>cookie只能存字符串，而localStorage和sessionStorage可以存储任意类型的数据（本质上也是字符串，需要使用JSON.stringify和JSON.parse）</p><h3 id="使用方式" tabindex="-1">使用方式 <a class="header-anchor" href="#使用方式" aria-label="Permalink to &quot;使用方式&quot;">​</a></h3><p>三者都存储在浏览器端，不同的是每次发送HTTP请求（同源）时，都会携带对应的cookie信息，在cookie信息较多的时候会造成额外的性能开销。</p><h3 id="存储大小" tabindex="-1">存储大小 <a class="header-anchor" href="#存储大小" aria-label="Permalink to &quot;存储大小&quot;">​</a></h3><p>cookie：一般是4kb，存储量小，一般用来保存登录状态等简单的数据 sessionStorage和localStorage的大小一般是5M左右，存储量较大，可以保存表单数据等复杂数据。</p><h3 id="存储时间" tabindex="-1">存储时间 <a class="header-anchor" href="#存储时间" aria-label="Permalink to &quot;存储时间&quot;">​</a></h3><p>cookie：可以设置过期时间，不设置默认浏览器关闭时删除 sessionStorage：只在当前页面有效，关闭浏览器或页面后删除 localStorage：永久有效，除非手动删除</p>',11)]))}const S=e(s,[["render",i]]);export{g as __pageData,S as default};
