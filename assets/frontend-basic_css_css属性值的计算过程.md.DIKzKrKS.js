import{_ as t,c as e,ag as a,o as i}from"./chunks/framework.BxW8Wou5.js";const l="/blog/picture/css%E5%B1%9E%E6%80%A7%E5%80%BC%E8%AE%A1%E7%AE%97%E8%BF%87%E7%A8%8B.png",f=JSON.parse('{"title":"CSS属性值的计算过程","description":"","frontmatter":{},"headers":[],"relativePath":"frontend-basic/css/css属性值的计算过程.md","filePath":"frontend-basic/css/css属性值的计算过程.md","lastUpdated":1705937785000}'),c={name:"frontend-basic/css/css属性值的计算过程.md"};function r(_,s,o,n,p,d){return i(),e("div",null,s[0]||(s[0]=[a('<h1 id="css属性值的计算过程" tabindex="-1">CSS属性值的计算过程 <a class="header-anchor" href="#css属性值的计算过程" aria-label="Permalink to &quot;CSS属性值的计算过程&quot;">​</a></h1><p>一个元素一个元素依次渲染，顺序按照页面文档的树形目录结构进行</p><p>渲染每个元素的前提条件：该元素的所有CSS属性都要有值</p><p>一个元素，从所有属性都没有值，到所有属性都有值，这个计算过程，叫做属性值的计算过程</p><img src="'+l+'"><ol><li>确定声明值：参考样式表中没有冲突的声明，作为CSS属性值</li><li>层叠冲突：对样式表有冲突的声明使用层叠规则，确定CSS属性值（参考上一节）</li><li>使用继承：对仍然没有值的属性，若可以继承，则继承父元素的值</li><li>使用默认值：对仍然没有值的属性，使用默认值</li></ol><p>特殊的两个CSS取值</p><ul><li>inherit：手动（强制）继承，将父元素的值取出应用到该元素</li><li>inital：初始值，将该属性设置为默认值</li></ul>',8)]))}const m=t(c,[["render",r]]);export{f as __pageData,m as default};
