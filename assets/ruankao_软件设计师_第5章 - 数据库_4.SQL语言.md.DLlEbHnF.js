import{_ as l,c as e,ag as i,o as r}from"./chunks/framework.BxW8Wou5.js";const E=JSON.parse('{"title":"4、SQL 语言","description":"","frontmatter":{},"headers":[],"relativePath":"ruankao/软件设计师/第5章 - 数据库/4.SQL语言.md","filePath":"ruankao/软件设计师/第5章 - 数据库/4.SQL语言.md","lastUpdated":null}'),t={name:"ruankao/软件设计师/第5章 - 数据库/4.SQL语言.md"};function o(h,a,d,n,u,c){return r(),e("div",null,a[0]||(a[0]=[i('<h1 id="_4、sql-语言" tabindex="-1">4、SQL 语言 <a class="header-anchor" href="#_4、sql-语言" aria-label="Permalink to &quot;4、SQL 语言&quot;">​</a></h1><h2 id="体系结构" tabindex="-1">体系结构 <a class="header-anchor" href="#体系结构" aria-label="Permalink to &quot;体系结构&quot;">​</a></h2><ul><li>视图：外模式</li><li>基本表：概念模式</li><li>存储文件：内模式</li></ul><h2 id="分类" tabindex="-1">分类 <a class="header-anchor" href="#分类" aria-label="Permalink to &quot;分类&quot;">​</a></h2><h3 id="ddl-数据定义语言-定义数据库对象-库、表、视图、索引等" tabindex="-1">DDL（数据定义语言）：定义数据库对象（库、表、视图、索引等）： <a class="header-anchor" href="#ddl-数据定义语言-定义数据库对象-库、表、视图、索引等" aria-label="Permalink to &quot;DDL（数据定义语言）：定义数据库对象（库、表、视图、索引等）：&quot;">​</a></h3><h4 id="建立数据库-create" tabindex="-1">建立数据库 CREATE <a class="header-anchor" href="#建立数据库-create" aria-label="Permalink to &quot;建立数据库 CREATE&quot;">​</a></h4><p><code>create database 数据库名</code></p><h4 id="建立基本表" tabindex="-1">建立基本表 <a class="header-anchor" href="#建立基本表" aria-label="Permalink to &quot;建立基本表&quot;">​</a></h4><p><code>create table 表名 （列名 数据类型 [列级完整性约束],...）表级完整性约束</code></p><h5 id="列级完整性约束" tabindex="-1">列级完整性约束 <a class="header-anchor" href="#列级完整性约束" aria-label="Permalink to &quot;列级完整性约束&quot;">​</a></h5><ul><li>非空（NOT NULL）、</li><li>唯一（UNIQUE）、</li><li>非空且唯一（NOT NULL UNIQUE）、</li><li>默认值（DEFAULT 值）</li></ul><h5 id="表级完整性约束" tabindex="-1">表级完整性约束 <a class="header-anchor" href="#表级完整性约束" aria-label="Permalink to &quot;表级完整性约束&quot;">​</a></h5><ul><li>主键（PRIMARY KEY（key） - 实体完整性）、</li><li>外键（FOREIGN KEY（key） Reference - 参照完整性）、</li><li>检查（Check（条件） - 用户自定义完整性）</li></ul><h4 id="修改表结构" tabindex="-1">修改表结构 <a class="header-anchor" href="#修改表结构" aria-label="Permalink to &quot;修改表结构&quot;">​</a></h4><ul><li>新增列：<code>ALTER TABLE 表名 ADD 列名 数据类型</code></li><li>删除列：<code>ALTER TABLE 表名 DROP COLUMN 列名</code></li><li>修改列：<code>ALTER TABLE 表名 ALTER(MODIFY) COLUMN(空) 列名 数据类型</code></li></ul><h4 id="删除基本表" tabindex="-1">删除基本表 <a class="header-anchor" href="#删除基本表" aria-label="Permalink to &quot;删除基本表&quot;">​</a></h4><ul><li><code>DROP TABLE 表名</code></li></ul><h3 id="dml-数据操纵语言-添加、修改、删除数据库中数据的语句" tabindex="-1">DML（数据操纵语言）：添加、修改、删除数据库中数据的语句： <a class="header-anchor" href="#dml-数据操纵语言-添加、修改、删除数据库中数据的语句" aria-label="Permalink to &quot;DML（数据操纵语言）：添加、修改、删除数据库中数据的语句：&quot;">​</a></h3><h4 id="插入数据-insert" tabindex="-1">插入数据 INSERT <a class="header-anchor" href="#插入数据-insert" aria-label="Permalink to &quot;插入数据 INSERT&quot;">​</a></h4><p><code>INSERT INTO 表名[(列名序列)] VALUES (值1, 值2, 值3, ...)</code></p><h4 id="删除数据-delete" tabindex="-1">删除数据 DELETE <a class="header-anchor" href="#删除数据-delete" aria-label="Permalink to &quot;删除数据 DELETE&quot;">​</a></h4><p><code>DELETE FROM 表名 [WHERE 条件]</code></p><h4 id="修改数据-update" tabindex="-1">修改数据 UPDATE <a class="header-anchor" href="#修改数据-update" aria-label="Permalink to &quot;修改数据 UPDATE&quot;">​</a></h4><p><code>UPDATE 表名 SET 列名 = 值 [,列名 = 值] [WHERE 列名 = 值]</code></p><h3 id="dql-数据查询语言-查询数据库的语句-内容多" tabindex="-1">DQL（数据查询语言）：查询数据库的语句**（内容多）** <a class="header-anchor" href="#dql-数据查询语言-查询数据库的语句-内容多" aria-label="Permalink to &quot;DQL（数据查询语言）：查询数据库的语句**（内容多）**&quot;">​</a></h3><p>完整的 SELECT 语句为：</p><p><code>SELECT 列名或表达式序列 FROM 表名 [WHERE 列名 [OPERATOR 值]][GROUP BY 列名] [HAVING 列名 [OPERATOR 值]] [ORDER BY 列名 [ASC | DESC]]</code></p><h4 id="投影查询" tabindex="-1">投影查询 <a class="header-anchor" href="#投影查询" aria-label="Permalink to &quot;投影查询&quot;">​</a></h4><ul><li>使用 SELECT 命令可以选择查询表中的任意列</li><li>查询多个列用逗号隔开</li><li>可以使用 DISTINCT 去掉重复行</li><li>查询多个表也用逗号隔开，会先进行笛卡尔积操作</li><li>可以使用<strong>AS 标题名</strong>，来显示新的列名（别名）</li></ul><h4 id="选择查询-where" tabindex="-1">选择查询（WHERE） <a class="header-anchor" href="#选择查询-where" aria-label="Permalink to &quot;选择查询（WHERE）&quot;">​</a></h4><h5 id="运算符" tabindex="-1">运算符 <a class="header-anchor" href="#运算符" aria-label="Permalink to &quot;运算符&quot;">​</a></h5><ul><li>集合成员运算符 IN、NOT IN</li><li>字符串匹配运算符 [NOT] LIKE(模糊查询，%代表任意字符，_代表任意单个字符)</li><li>空值比较运算符 IS NULL、IS NOT NULL</li><li>比较运算符 &gt;、&lt;、&gt;=、&lt;=、=、&lt;&gt;、!=</li><li>逻辑运算符 AND、OR、NOT</li><li>BETWEEN A AND B：A &lt;= x &lt;= B</li></ul><h4 id="排序查询" tabindex="-1">排序查询 <a class="header-anchor" href="#排序查询" aria-label="Permalink to &quot;排序查询&quot;">​</a></h4><p>查出的结果进行排序</p><ul><li>使用 ORDER BY</li><li>ASC（升序 - 默认）、DESC（降序）</li><li>ORDER BY 必须是 SELECT 子句中的最后一个子句</li><li>可以按多个列进行排序</li></ul><h4 id="聚合函数-重要" tabindex="-1">聚合函数（重要） <a class="header-anchor" href="#聚合函数-重要" aria-label="Permalink to &quot;聚合函数（重要）&quot;">​</a></h4><p>实现一个数据统计的功能，用于对一组值进行计算并返回一个<strong>单一的值</strong>，一般配合 GROUP BY 使用</p><h5 id="常用的聚合函数" tabindex="-1">常用的聚合函数 <a class="header-anchor" href="#常用的聚合函数" aria-label="Permalink to &quot;常用的聚合函数&quot;">​</a></h5><ul><li>AVG：计算一个数值型表达式的平均值</li><li>COUNT：计算一个表达式的项数，COUNT(*)统计查询输出的行数</li><li>MIN：返回一个数值型表达式的最小值</li><li>MAX：返回一个数值型表达式的最大值</li><li>SUM：返回一个数值型表达式的和</li></ul><h4 id="数据分组-group-by" tabindex="-1">数据分组 GROUP BY <a class="header-anchor" href="#数据分组-group-by" aria-label="Permalink to &quot;数据分组 GROUP BY&quot;">​</a></h4><ul><li>加上 GROUP BY 以后，查询结果将按 GROUP BY 指定的字段进行分组</li><li>当一个聚合函数和一个 GROUP BY 字段一起使用时，聚合函数将返回每个分组的计算结果</li><li>在投影中若存在聚合函数，除了聚合函数，别的列都要分组</li><li>HAVING 在分组后进行过滤，必须与 GROUP BY 一起使用，支持聚合函数</li></ul><h5 id="执行顺序" tabindex="-1">执行顺序 <a class="header-anchor" href="#执行顺序" aria-label="Permalink to &quot;执行顺序&quot;">​</a></h5><p>当 WHERE、GROUP BY、HAVING 语句同时出现在一个查询中时，执行顺序如下</p><ul><li>执行 WHERE 语句，从表中选取行</li><li>由 GROUP BY 对选取的行进行分组</li><li>执行聚合函数</li><li>执行 HAVING 子句选取满足条件的分组</li></ul><h4 id="连接查询" tabindex="-1">连接查询 <a class="header-anchor" href="#连接查询" aria-label="Permalink to &quot;连接查询&quot;">​</a></h4><p>在数据查询中，经常涉及提取两个或多个表的数据，需要使用表的连接来实现联合查询</p><ul><li>需要对多个表连接时，可以指定连接列，在 where 中给出连接条件，在 FROM 中指定要连接的表</li><li>存在公共列，在连接条件中通过表名前缀指定连接列</li></ul><h5 id="内连接-等值连接-sita-连接-自连接" tabindex="-1">内连接（等值连接，sita 连接，自连接） <a class="header-anchor" href="#内连接-等值连接-sita-连接-自连接" aria-label="Permalink to &quot;内连接（等值连接，sita 连接，自连接）&quot;">​</a></h5><p><code>select * from student inner join score on 条件</code></p><ul><li>使用 INNER JOIN 关键字，不使用时也默认为内连接</li><li>内连接分为等值连接、非等值连接、自然连接</li><li>等值连接，就是表之间通过“等于”关系连接起来</li><li>非等值连接，就是表之间不通过“等于”关系连接起来</li><li>自连接，就是把表的某行与同一表中的另一行连接起来</li></ul><h5 id="外连接-左外连接、右外连接、全外连接" tabindex="-1">外连接（左外连接、右外连接、全外连接） <a class="header-anchor" href="#外连接-左外连接、右外连接、全外连接" aria-label="Permalink to &quot;外连接（左外连接、右外连接、全外连接）&quot;">​</a></h5><ul><li>左连接：其结果包括第一个命名表中的所有行，不包括右表中的不匹配行</li><li>右连接：其结果包括第二个命名表中的所有行，不包括第一个命名表中的不匹配行</li></ul><h4 id="子查询" tabindex="-1">子查询 <a class="header-anchor" href="#子查询" aria-label="Permalink to &quot;子查询&quot;">​</a></h4><p>一个查询嵌套另一个查询</p><h5 id="一般子查询" tabindex="-1">一般子查询 <a class="header-anchor" href="#一般子查询" aria-label="Permalink to &quot;一般子查询&quot;">​</a></h5><h4 id="并、交、差" tabindex="-1">并、交、差 <a class="header-anchor" href="#并、交、差" aria-label="Permalink to &quot;并、交、差&quot;">​</a></h4><ul><li>UNION：并集</li><li>INTERSECT：交集</li><li>EXCEPT：差集</li></ul><h3 id="dcl-数据控制语言-权限管理和事务管理" tabindex="-1">DCL（数据控制语言）：权限管理和事务管理 <a class="header-anchor" href="#dcl-数据控制语言-权限管理和事务管理" aria-label="Permalink to &quot;DCL（数据控制语言）：权限管理和事务管理&quot;">​</a></h3><p>某个用户对某类数据具有何种权利，是一个政策问题，非技术问题</p><ul><li>通过 GRANT 和 REVOKE 命令来管理权限</li><li>当用户请求权限时，根据授权情况检查是否执行（INSERT、UPDATE、DELETE、SELECT（对应 READ）、REFERENCES 权限）</li></ul><p><code>GRANT 权限 on TABLE 表名 TO USER 用户名 [WITH GRANT OPTION]</code></p><ul><li>WITH GRANT OPTION 表示授权用户可以授权给其他用户</li></ul>',62)]))}const b=l(t,[["render",o]]);export{E as __pageData,b as default};
