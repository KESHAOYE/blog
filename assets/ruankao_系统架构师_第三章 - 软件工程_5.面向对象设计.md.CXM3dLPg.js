import{_ as l,c as e,ag as i,o as r}from"./chunks/framework.BxW8Wou5.js";const t="/blog/picture/%E8%BD%AF%E8%80%83/%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E8%AE%BE%E8%AE%A1-%E5%9F%BA%E6%9C%AC%E8%BF%87%E7%A8%8B.png",p=JSON.parse('{"title":"5、面向对象设计","description":"","frontmatter":{},"headers":[],"relativePath":"ruankao/系统架构师/第三章 - 软件工程/5.面向对象设计.md","filePath":"ruankao/系统架构师/第三章 - 软件工程/5.面向对象设计.md","lastUpdated":null}'),o={name:"ruankao/系统架构师/第三章 - 软件工程/5.面向对象设计.md"};function n(h,a,s,d,u,_){return r(),e("div",null,a[0]||(a[0]=[i('<h1 id="_5、面向对象设计" tabindex="-1">5、面向对象设计 <a class="header-anchor" href="#_5、面向对象设计" aria-label="Permalink to &quot;5、面向对象设计&quot;">​</a></h1><h2 id="基本过程" tabindex="-1">基本过程 <a class="header-anchor" href="#基本过程" aria-label="Permalink to &quot;基本过程&quot;">​</a></h2><img src="'+t+'"><h3 id="分析阶段" tabindex="-1">分析阶段 <a class="header-anchor" href="#分析阶段" aria-label="Permalink to &quot;分析阶段&quot;">​</a></h3><ul><li>用例模型</li><li>分析模型（领域模型）</li></ul><h2 id="类的分类" tabindex="-1">类的分类 <a class="header-anchor" href="#类的分类" aria-label="Permalink to &quot;类的分类&quot;">​</a></h2><h3 id="边界类" tabindex="-1">边界类 <a class="header-anchor" href="#边界类" aria-label="Permalink to &quot;边界类&quot;">​</a></h3><p>和外界对接</p><ul><li>机器接口（API 接口）</li><li>人机交互（用户界面）</li></ul><p>显示器、窗体、打印机接口、通信协议、对话框、菜单、购物车、报表、二维码</p><h3 id="控制类" tabindex="-1">控制类 <a class="header-anchor" href="#控制类" aria-label="Permalink to &quot;控制类&quot;">​</a></h3><ul><li>应用逻辑</li><li>业务逻辑</li><li>数据访问逻辑</li></ul><p>身份验证器</p><h3 id="实体类" tabindex="-1">实体类 <a class="header-anchor" href="#实体类" aria-label="Permalink to &quot;实体类&quot;">​</a></h3><p>对接数据库，对标数据表</p><p>学员类、课程类</p><h2 id="设计原则-七大原则" tabindex="-1">设计原则（七大原则） <a class="header-anchor" href="#设计原则-七大原则" aria-label="Permalink to &quot;设计原则（七大原则）&quot;">​</a></h2><ul><li>单一职责原则：设计目的单一的类</li><li>开放-封闭原则：对扩展开放，对修改封闭</li><li>李氏（Liskov）替换原则：子类可以替换父类</li><li>依赖倒置原则：要依赖于抽象，而不是具体实现；针对接口编程，不要针对实现编程</li><li>接口隔离原则：使用多个专门的接口比使用单一的总接口要好</li><li>组合重用原则：要尽量使用组合，而不是继承关系达到重用目的</li><li>迪米特（Demeter）原则（最少知识原则）：一个对象应当对其他对象有尽可能少的了解</li></ul>',18)]))}const m=l(o,[["render",n]]);export{p as __pageData,m as default};
