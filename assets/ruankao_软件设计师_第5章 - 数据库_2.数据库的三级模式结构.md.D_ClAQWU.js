import{_ as e,c as r,ag as t,o as l}from"./chunks/framework.BxW8Wou5.js";const c=JSON.parse('{"title":"2、数据库的三级模式结构（三级模式两级映像）","description":"","frontmatter":{},"headers":[],"relativePath":"ruankao/软件设计师/第5章 - 数据库/2.数据库的三级模式结构.md","filePath":"ruankao/软件设计师/第5章 - 数据库/2.数据库的三级模式结构.md","lastUpdated":1761796671000}'),i={name:"ruankao/软件设计师/第5章 - 数据库/2.数据库的三级模式结构.md"};function o(n,a,h,d,_,s){return l(),r("div",null,a[0]||(a[0]=[t('<h1 id="_2、数据库的三级模式结构-三级模式两级映像" tabindex="-1">2、数据库的三级模式结构（三级模式两级映像） <a class="header-anchor" href="#_2、数据库的三级模式结构-三级模式两级映像" aria-label="Permalink to &quot;2、数据库的三级模式结构（三级模式两级映像）&quot;">​</a></h1><h2 id="三级模式" tabindex="-1">三级模式 <a class="header-anchor" href="#三级模式" aria-label="Permalink to &quot;三级模式&quot;">​</a></h2><h3 id="概念模式" tabindex="-1">概念模式 <a class="header-anchor" href="#概念模式" aria-label="Permalink to &quot;概念模式&quot;">​</a></h3><ul><li>称为模式</li><li>对应的是基本表</li></ul><h3 id="外模式" tabindex="-1">外模式 <a class="header-anchor" href="#外模式" aria-label="Permalink to &quot;外模式&quot;">​</a></h3><ul><li>称为用户模式或子模式</li><li>对应的是视图</li></ul><h3 id="内模式" tabindex="-1">内模式 <a class="header-anchor" href="#内模式" aria-label="Permalink to &quot;内模式&quot;">​</a></h3><ul><li>称为存储模式</li><li>对应数据库的存储文件</li></ul><h2 id="两级映像" tabindex="-1">两级映像 <a class="header-anchor" href="#两级映像" aria-label="Permalink to &quot;两级映像&quot;">​</a></h2><h3 id="模式-内模式-物理独立性" tabindex="-1">模式 - 内模式（物理独立性） <a class="header-anchor" href="#模式-内模式-物理独立性" aria-label="Permalink to &quot;模式 - 内模式（物理独立性）&quot;">​</a></h3><p>存在于概念级和内部级之间，实现了概念模式和内模式之间的相互转换</p><h3 id="外模式-模式-逻辑独立性" tabindex="-1">外模式 - 模式（逻辑独立性） <a class="header-anchor" href="#外模式-模式-逻辑独立性" aria-label="Permalink to &quot;外模式 - 模式（逻辑独立性）&quot;">​</a></h3><p>存在于外部级和概念级之间，实现了外模式和概念模式之间的相互转换</p>',13)]))}const m=e(i,[["render",o]]);export{c as __pageData,m as default};
